Methods
method and function refer to the same thing
camel case



name (typed-parameter-list){
    statements
}

Return type -indicates the type of data returned

returntype name (typed-parameter-list){
    statements
}
 
 use void when no value returned

static void doSomething(){

}

static helps compile the code
Parameters enable passing data values to methods


static void showSum(float x,float y, int count){

}
(float...) are our parameters
int count is how many times it will pass through
the parameter receives copies of the values so what is being performed on th evalues within the function does not actually affect the original values;

What makes a mthod exit- end of code, return statements, errors



Module 7 Working with Strings
 Characters you single quotes and strings he'Characters you single quotes and strings use double quotes

 a string is immutable and the initial value can never be changed

 when using the equality variable it does not check to see if strings are the same but if they reference the same string instance;

== checking same memory points

s1.equals(s2) checks each Characters

.intern method looks to se if there is an intern method and if not creates one
give a reference to the same string reference
provides canonicalized value

only use intern method if you know you will be comparing a string multiple times
length methos tells us how many characters in a string

other methods: concat replace tolowercase, to uppercase, trim, split, charAt, substring, contains, endswith, startswith, indexOf,lastindexof, equals, equalsignorecase, is empty,compareto,comparetoignorecase,format,valueof

String.valueOf
often java detects and converts implicityly

string output


String Builder

StringBuilder sb =new StringBuilder(char estimate i.e. 40)

sb.append("...");
.
.
.as many instances or variabels

string message = sb.toString();


ex:
string time ="9:00"
int pos =sb.indexOf(" on";)
sb.insert(pos, " at ");
sb.insert(pos +4, time);
message=sb.toString;

string builds can be made of all types of data char, double, strings etc. and all combined


Module 8 String Formatting

string.format
system.out.printf
formatter.format

uses substitutions 

My nephews are %d, %d, %d, and %d years old.
substitutions could be method results

String s4 = String.format(
    "....... %.1f  ..."
) gies one float decimal 

format conversions possible
Decimal, HEX, decimal – floating point, Scientific notation – floating point, string -general

format flags 
start with % end with conversion

#- include radix
width can help with alginment and so can leading zeros
%,d comma flag indicates use of , between long numbers
%,.2f would use commas and give two decimal spaces
0- zero padding
- left justify
,include group separator
space Leading space when positive number
+ Always show sign
( enclose negative values in a parenthesis

indexes correspond sequentially
or can be specified with index$ index of argument (1 based)
< less than index corresponds to format of previous format specifier